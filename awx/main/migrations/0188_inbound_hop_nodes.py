# Generated by Django 4.2.6 on 2023-11-19 01:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion

from ._receptor_address import migrate_instance_relationship_to_receptor_relationships


class Migration(migrations.Migration):
    dependencies = [
        ('main', '0187_hop_nodes'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReceptorAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(help_text='Routable address for this instance.', max_length=255)),
                (
                    'port',
                    models.IntegerField(
                        default=27199,
                        help_text='Port for the address.',
                        validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(65535)],
                    ),
                ),
                (
                    'protocol',
                    models.CharField(
                        choices=[('tcp', 'TCP'), ('ws', 'WS'), ('wss', 'WSS')],
                        default='tcp',
                        help_text="Protocol to use when connecting, 'tcp', 'wss', or 'ws'.",
                        max_length=10,
                    ),
                ),
                ('websocket_path', models.CharField(blank=True, default='', help_text='Websocket path.', max_length=255)),
                ('is_internal', models.BooleanField(default=False, help_text='If True, only routable inside of the Kubernetes cluster.')),
                (
                    'peers_from_control_nodes',
                    models.BooleanField(default=False, help_text='If True, control plane cluster nodes should automatically peer to it.'),
                ),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receptor_addresses', to='main.instance')),
            ],
        ),
        migrations.CreateModel(
            name='InstanceLinkReceptorAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'link_state',
                    models.CharField(
                        choices=[('adding', 'Adding'), ('established', 'Established'), ('removing', 'Removing')],
                        default='adding',
                        help_text='Indicates the current life cycle stage of this peer link.',
                        max_length=16,
                    ),
                ),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.instance')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.receptoraddress')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='activitystream',
            name='receptor_address',
            field=models.ManyToManyField(blank=True, to='main.receptoraddress'),
        ),
        migrations.AlterField(
            model_name='instance',
            name='peers',
            field=models.ManyToManyField(related_name='peers_from', through='main.InstanceLinkReceptorAddress', to='main.receptoraddress'),
        ),
        migrations.AddConstraint(
            model_name='receptoraddress',
            constraint=models.UniqueConstraint(
                fields=('address', 'protocol'), name='unique_receptor_address', violation_error_message='Receptor address + protocol must be unique.'
            ),
        ),
        migrations.AddConstraint(
            model_name='instancelinkreceptoraddress',
            constraint=models.UniqueConstraint(fields=('source', 'target'), name='source_target_unique_together'),
        ),
        migrations.RunPython(migrate_instance_relationship_to_receptor_relationships),
        migrations.RemoveField(
            model_name='instance',
            name='listener_port',
        ),
    ]
